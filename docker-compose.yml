x-build: &app-build
    context: .
    dockerfile: Dockerfile

services:

    db:
        image: mysql:8.3
        container_name: linkdrop-mysql
        environment:
            MYSQL_DATABASE: link_drop
            MYSQL_USER: laravel_user
            MYSQL_PASSWORD: secret
            MYSQL_ROOT_PASSWORD: rootsecret
        volumes:
            - mysqldata:/var/lib/mysql
        ports:
            - "3307:3306"
        networks:
            - app-network

    redis:
        image: redis:8-alpine
        container_name: linkdrop-redis
        ports:
            - "6379:6379"
        networks:
            - app-network

    app:
        build: *app-build
        container_name: laravel-app
        image: linkdrop-laravel-app
        depends_on:
            - db
            - redis
        env_file: .env.docker
        environment:
            CONTAINER_ROLE: "app"
        volumes:
            - public_files:/var/www/html/public
            - storage_files:/var/www/html/storage
        expose:
            - "9000"
        networks:
            - app-network

    queue:
        build: *app-build
        depends_on:
            - app
        env_file: .env.docker
        environment:
            CONTAINER_ROLE: "queue-worker"
        container_name: linkdrop-queue
        command: [ "php", "artisan", "queue:work", "--sleep=3", "--tries=3" ]
        restart: unless-stopped
        stop_signal: SIGTERM

        healthcheck:
            test: [ "CMD", "php", "artisan", "queue:work", "--once", "--stop-on-empty" ]
            interval: 30s
            retries: 3
            start_period: 10s
        networks:
            - app-network

    scheduler:
        build: *app-build
        depends_on:
            - app
        env_file: .env.docker
        environment:
            CONTAINER_ROLE: "scheduler"

        container_name: linkdrop-scheduler
        command: [ "sh", "-c", "while true; do php artisan schedule:run --verbose --no-interaction; sleep 60; done" ]
        restart: unless-stopped
        networks:
            - app-network

    web:
        image: nginx:alpine
        container_name: linkdrop-nginx
        ports:
            - "8080:80"
        volumes:
            - public_files:/var/www/html/public
            - storage_files:/var/www/html/storage
            - ./nginx.conf:/etc/nginx/conf.d/default.conf
        networks:
            - app-network

volumes:
    mysqldata:
    public_files:
    storage_files:


networks:
    app-network:
        driver: bridge
